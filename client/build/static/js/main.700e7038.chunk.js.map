{"version":3,"sources":["slices/authenticate.js","slices/communicate.js","slices/feedback.js","components/add-friend/add-friend.jsx","slices/actions.js","components/dialog/delete-conversation.jsx","components/dropdown/dropdown.jsx","components/message/message.jsx","firebase/firebase.js","components/messages/messages.jsx","components/chat/chat.jsx","components/contacts/contacts.jsx","components/friend-requests/friend-requests.jsx","assets/logo.svg","components/header/header.jsx","pages/main/main.jsx","components/sign-up/sign-up.jsx","components/sign-in/sign-in.jsx","components/background/background.jsx","pages/authenticate/authenticate.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["authenticateSlice","createSlice","name","initialState","welcome","hasAccount","myName","myLanguage","myEmail","password","user","reducers","setMyName","state","action","payload","setWelcome","setHasAccount","setMyLanguage","setMyEmail","setPassword","setUser","actions","selectWelcome","authenticate","selectHasAccount","selectMyLanguage","selectMyName","selectMyEmail","selectPassword","selectUser","communicateSlice","isChatOpen","isAddingFriend","messageSent","otherEmail","otherName","otherLanguage","setAddingFriend","setIsChatOpen","setOtherEmail","setOtherName","setOtherLanguage","selectIsChatOpen","communicate","selectIsAddingFriend","selectOtherEmail","selectOtherName","selectOtherLanguage","feedbackSlice","isLoading","isSnackbarOpen","serverError","validationError","snackbarMessage","setIsActionable","isActionable","setCancelSend","cancelSend","setIsLoading","setServerError","setValidationError","setSnackbarMessage","setIsSnackbarOpen","selectIsLoading","feedback","selectServerError","selectValidationError","selectIsSnackbarOpen","selectSnackbarMessage","useStyles","makeStyles","root","minWidth","marginTop","marginBottom","alert","button","textTransform","width","close","float","marginRight","cursor","content","padding","header","background","textAlign","intro","input","AddFriend","classes","dispatch","useDispatch","useState","useSelector","error","setError","setTimeout","Card","className","Typography","variant","gutterBottom","onClick","CardContent","onSubmit","event","preventDefault","test","String","toLowerCase","data","my_email","other_email","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","result","catch","sendFriendRequest","noValidate","autoComplete","TextField","onChange","target","value","helperText","label","type","Alert","severity","Button","color","actionsSlice","openDialog","openDropdown","setOpenDialog","setOpenDropdown","selectOpenDialog","selectOpenDropdown","theme","buttonSecondary","buttonContainer","buttonPrimary","marginLeft","DeleteConversation","props","open","handleCancel","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","deleteConversation","autoFocus","popperButton","Dropdown","handleDelete","Popper","popper","anchorEl","placement","transition","TransitionProps","Fade","timeout","Paper","popperPaper","received","backgroundColor","borderRadius","maxWidth","sent","Message","isFriend","Grid","container","direction","justify","alignItems","text","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","height","Messages","messages","setMessages","db","firestore","listRef","useRef","useEffect","collection","doc","onSnapshot","querySnapshot","temp","forEach","push","current","scrollToItem","length","itemSize","index","messageLength","message","division","Math","round","itemCount","ref","style","email","avatar","red","Chat","newPlacement","setAnchorEl","setPlacement","setMessage","handleSubmit","my_name","my_language","other_name","other_language","trim","sendMessage","CardHeader","Avatar","alt","IconButton","currentTarget","prev","aria-label","title","FormControl","InputLabel","htmlFor","OutlinedInput","onKeyPress","key","endAdornment","InputAdornment","position","edge","labelWidth","extendedIcon","spacing","list","fab","Contacts","friends","setFriends","Fab","List","map","friend","idx","ListItem","language","handleOpenChat","ListItemAvatar","ListItemText","primary","secondary","Fragment","lastMessage","slice","palette","paper","item","fontSize","fontWeight","FriendRequests","friendRequests","setFriendRequests","getFriendRequests","ListSubheader","component","labelId","ListItemSecondaryAction","handleAddFriend","size","handleIgnoreFriend","flexGrow","appBar","img","signOut","margin","Header","AppBar","Toolbar","src","logo","auth","window","location","reload","localStorage","clear","errorMessage","Hidden","only","Main","myRef","get","exists","LinearProgress","xs","sm","lg","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","alternateButton","dropdown","SignUp","showPassword","setShowPassword","languages","select","option","MenuItem","createUserWithEmailAndPassword","userCredential","setItem","appbar","icon","signInWithEmailAndPassword","Background","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","Authenticate","md","overflowX","App","createMuiTheme","light","main","dark","contrastText","loaded","setLoaded","cache","parse","getItem","ThemeProvider","configureStore","reducer","actionsReducer","authenticateReducer","communicateReducer","feedbackReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.700e7038.chunk.js","sourcesContent":["/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const authenticateSlice = createSlice({\n  name: \"authenticate\",\n  initialState: {\n    welcome: true,\n    hasAccount: false,\n    myName: \"\",\n    myLanguage: \"\",\n    myEmail: \"\",\n    password: \"\",\n    user: false,\n  },\n  reducers: {\n    setMyName: (state, action) => {\n      state.myName = action.payload;\n    },\n    setWelcome: (state) => {\n      state.welcome = !state.welcome;\n    },\n    setHasAccount: (state) => {\n      state.hasAccount = !state.hasAccount;\n    },\n    setMyLanguage: (state, action) => {\n      state.myLanguage = action.payload;\n    },\n    setMyEmail: (state, action) => {\n      state.myEmail = action.payload;\n    },\n    setPassword: (state, action) => {\n      state.password = action.payload;\n    },\n    setUser: (state) => {\n      state.user = !state.user;\n    },\n  },\n});\n\nexport const {\n  setWelcome,\n  setHasAccount,\n  setMyLanguage,\n  setMyName,\n  setMyEmail,\n  setPassword,\n  setUser,\n} = authenticateSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectWelcome = (state) => state.authenticate.welcome;\nexport const selectHasAccount = (state) => state.authenticate.hasAccount;\nexport const selectMyLanguage = (state) => state.authenticate.myLanguage;\nexport const selectMyName = (state) => state.authenticate.myName;\nexport const selectMyEmail = (state) => state.authenticate.myEmail;\nexport const selectPassword = (state) => state.authenticate.password;\nexport const selectUser = (state) => state.authenticate.user;\n\nexport default authenticateSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const communicateSlice = createSlice({\n  name: \"communicate\",\n  initialState: {\n    isChatOpen: false,\n    isAddingFriend: false,\n    messageSent: false,\n    otherEmail: \"\",\n    otherName: \"\",\n    otherLanguage: \"\",\n  },\n  reducers: {\n    setAddingFriend: (state) => {\n      state.isAddingFriend = !state.isAddingFriend;\n    },\n    setIsChatOpen: (state, action) => {\n      state.isChatOpen = action.payload;\n    },\n    setOtherEmail: (state, action) => {\n      state.otherEmail = action.payload;\n    },\n    setOtherName: (state, action) => {\n      state.otherName = action.payload;\n    },\n    setOtherLanguage: (state, action) => {\n      state.otherLanguage = action.payload;\n    },\n  },\n});\n\nexport const {\n  setAddingFriend,\n  setIsChatOpen,\n  setOtherEmail,\n  setOtherName,\n  setOtherLanguage,\n} = communicateSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectIsChatOpen = (state) => state.communicate.isChatOpen;\nexport const selectIsAddingFriend = (state) => state.communicate.isAddingFriend;\nexport const selectOtherEmail = (state) => state.communicate.otherEmail;\nexport const selectOtherName = (state) => state.communicate.otherName;\nexport const selectOtherLanguage = (state) => state.communicate.otherLanguage;\n\nexport default communicateSlice.reducer;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const feedbackSlice = createSlice({\n  name: \"feedback\",\n  initialState: {\n    isLoading: false,\n    isSnackbarOpen: false,\n    serverError: \"\",\n    validationError: \"\",\n    snackbarMessage: \"\",\n  },\n  reducers: {\n    setIsActionable: (state) => {\n      state.isActionable = !state.isActionable;\n    },\n    setCancelSend: (state) => {\n      state.cancelSend = !state.cancelSend;\n    },\n    setIsLoading: (state) => {\n      state.isLoading = !state.isLoading;\n    },\n    setServerError: (state, action) => {\n      state.serverError = action.payload;\n    },\n    setValidationError: (state, action) => {\n      state.validationError = action.payload;\n    },\n    setSnackbarMessage: (state, action) => {\n      state.snackbarMessage = action.payload;\n    },\n    setIsSnackbarOpen: (state) => {\n      state.isSnackbarOpen = !state.isSnackbarOpen;\n    },\n  },\n});\n\nexport const {\n  setIsActionable,\n  setCancelSend,\n  setIsLoading,\n  setServerError,\n  setValidationError,\n  setSnackbarMessage,\n  setIsSnackbarOpen,\n} = feedbackSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectIsActionable = (state) => state.feedback.isActionable;\nexport const selectCancelSend = (state) => state.feedback.cancelSend;\nexport const selectIsLoading = (state) => state.feedback.isLoading;\nexport const selectServerError = (state) => state.feedback.serverError;\nexport const selectValidationError = (state) => state.feedback.validationError;\nexport const selectIsSnackbarOpen = (state) => state.feedback.isSnackbarOpen;\nexport const selectSnackbarMessage = (state) => state.feedback.snackbarMessage;\n\nexport default feedbackSlice.reducer;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectMyEmail } from \"../../slices/authenticate\";\nimport {\n  setValidationError,\n  setIsSnackbarOpen,\n  setSnackbarMessage,\n  selectValidationError,\n} from \"../../slices/feedback\";\nimport { setAddingFriend } from \"../../slices/communicate\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginTop: \"2rem\",\n    marginBottom: \"5rem\",\n  },\n  alert: {\n    marginBottom: \"1rem\",\n  },\n  button: {\n    marginBottom: \"0.75rem\",\n    textTransform: \"capitalize\",\n    width: \"100%\",\n  },\n  close: {\n    float: \"right\",\n    marginRight: \"0.75rem\",\n    marginTop: \"0.25rem\",\n    cursor: \"pointer\",\n  },\n  content: {\n    padding: \"1rem 1rem 0rem 1rem\",\n  },\n  header: {\n    background: \"#F4F5F6\",\n    padding: \"1rem 0.5rem 1rem 0.5rem\",\n    textAlign: \"center\",\n  },\n  intro: {\n    marginBottom: \"1.5rem\",\n    textAlign: \"left\",\n  },\n  input: {\n    marginBottom: \"1rem\",\n    width: \"100%\",\n  },\n});\n\nconst AddFriend = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [otherEmail, setOtherEmail] = useState(\"\");\n  const myEmail = useSelector(selectMyEmail);\n  const validationError = useSelector(selectValidationError);\n  const [error, setError] = useState(\"\");\n  if (error) {\n    setTimeout(() => {\n      setError(\"\");\n    }, 3000);\n  }\n\n  const validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const sendFriendRequest = () => {\n    const data = {\n      action: \"send_friend_request\",\n      my_email: myEmail,\n      other_email: otherEmail,\n    };\n\n    fetch(\"https://message4.herokuapp.com/firebase\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"send_friend_request:\", data.result);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // if the email isn't valid\n    if (validateEmail(otherEmail) && otherEmail !== myEmail) {\n      setOtherEmail(\"\");\n      dispatch(setAddingFriend());\n      dispatch(setIsSnackbarOpen());\n      dispatch(setSnackbarMessage(\"Your friend request was sent\"));\n      sendFriendRequest();\n    } else if (otherEmail === myEmail) {\n      setError(\"You cannot add yourself\");\n      setOtherEmail(\"\");\n    } else {\n      dispatch(setValidationError(\"Please enter a valid email\"));\n    }\n  };\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"overline\" gutterBottom>\n          ADD FRIEND\n        </Typography>\n        <CloseIcon\n          onClick={() => {\n            dispatch(setAddingFriend());\n            dispatch(setValidationError(\"\"));\n          }}\n          className={classes.close}\n        />\n      </div>\n      <div className={classes.content}>\n        <CardContent>\n          <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n            <Typography className={classes.intro} variant=\"body2\" gutterBottom>\n              Invite a friend to join your message.\n            </Typography>\n            <TextField\n              onChange={(event) => {\n                setOtherEmail(event.target.value);\n                if (validationError) {\n                  dispatch(setValidationError(\"\"));\n                }\n              }}\n              error={validationError ? true : false}\n              helperText={validationError}\n              className={classes.input}\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              value={otherEmail}\n              variant=\"outlined\"\n            />\n            {error ? (\n              <Alert className={classes.alert} severity=\"warning\">\n                {error}\n              </Alert>\n            ) : null}\n            <Button\n              className={classes.button}\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              Send Invite\n            </Button>\n          </form>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\nexport default AddFriend;\n","/** @format */\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nexport const actionsSlice = createSlice({\n  name: \"actions\",\n  initialState: {\n    openDialog: false,\n    openDropdown: false,\n  },\n  reducers: {\n    setOpenDialog: (state) => {\n      state.openDialog = !state.openDialog;\n    },\n    setOpenDropdown: (state) => {\n      state.openDropdown = !state.openDropdown;\n    },\n  },\n});\n\nexport const { setOpenDialog, setOpenDropdown } = actionsSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectOpenDialog = (state) => state.actions.openDialog;\nexport const selectOpenDropdown = (state) => state.actions.openDropdown;\n\nexport default actionsSlice.reducer;\n","/** @format */\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setOpenDialog, selectOpenDialog } from \"../../slices/actions\";\nimport { selectMyEmail } from \"../../slices/authenticate\";\nimport { selectOtherEmail } from \"../../slices/communicate\";\nimport { setIsLoading } from \"../../slices/feedback\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nconst useStyles = makeStyles((theme) => ({\n  buttonSecondary: {\n    textTransform: \"capitalize\",\n  },\n  buttonContainer: {\n    marginBottom: \"0.5rem\",\n    marginRight: \"0.5rem\",\n  },\n  buttonPrimary: {\n    background: \"#ff2454\",\n    marginLeft: \"0.5rem\",\n    textTransform: \"capitalize\",\n  },\n}));\n\nconst DeleteConversation = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const myEmail = useSelector(selectMyEmail);\n  const otherEmail = useSelector(selectOtherEmail);\n  const open = useSelector(selectOpenDialog);\n\n  const deleteConversation = () => {\n    const data = {\n      action: \"delete_conversation\",\n      my_email: myEmail,\n      other_email: otherEmail,\n    };\n\n    fetch(\"https://message4.herokuapp.com/firebase\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"delete_conversation:\", data.result);\n        dispatch(setIsLoading());\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  const handleCancel = () => {\n    dispatch(setOpenDialog());\n  };\n\n  const handleDelete = () => {\n    dispatch(setIsLoading());\n    deleteConversation();\n    dispatch(setOpenDialog());\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleCancel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {`Delete your conversation with ${props.otherName}`}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {`If you delete your conversation with ${props.otherName}, it will be deleted for you, but not for the other person. Are you sure you want to do this?`}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <div className={classes.buttonContainer}>\n            <Button\n              onClick={handleCancel}\n              className={classes.buttonSecondary}\n              color=\"primary\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={handleDelete}\n              className={classes.buttonPrimary}\n              color=\"secondary\"\n              variant=\"contained\"\n              autoFocus\n            >\n              Confirm Deletion\n            </Button>\n          </div>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default DeleteConversation;\n","/** @format */\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setOpenDialog, setOpenDropdown } from \"../../slices/actions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\n\nconst useStyles = makeStyles((theme) => ({\n  popperButton: {\n    textTransform: \"capitalize\",\n  },\n}));\n\nconst Dropdown = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(setOpenDialog());\n    dispatch(setOpenDropdown());\n  };\n\n  return (\n    <Popper\n      className={classes.popper}\n      anchorEl={props.anchorEl}\n      open={props.open}\n      placement={props.placement}\n      transition\n    >\n      {({ TransitionProps }) => (\n        <Fade {...TransitionProps} timeout={350}>\n          <Paper className={classes.popperPaper}>\n            <Button onClick={handleDelete} className={classes.popperButton}>\n              Delete Conversation\n            </Button>\n          </Paper>\n        </Fade>\n      )}\n    </Popper>\n  );\n};\nexport default Dropdown;\n","/** @format */\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { marginBottom: \"0.5rem\" },\n  received: {\n    backgroundColor: \"#383C42\",\n    borderRadius: \"0.5rem 0.5rem 0.5rem 0.1rem\",\n    color: \"#fff\",\n    maxWidth: 425,\n    padding: \"0.25rem 0.75rem 0 0.75rem\",\n  },\n  sent: {\n    backgroundColor: \"#479AFF\",\n    borderRadius: \"0.5rem 0.5rem 0.1rem 0.5rem\",\n    color: \"#fff\",\n    maxWidth: 425,\n    padding: \"0.25rem 0.75rem 0 0.75rem\",\n  },\n}));\n\nconst Message = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      {props.isFriend ? (\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"flex-start\"\n          alignItems=\"flex-start\"\n        >\n          <div className={classes.received}>\n            <Typography variant=\"body2\" gutterBottom>\n              {props.text}\n            </Typography>\n          </div>\n        </Grid>\n      ) : (\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"flex-start\"\n          alignItems=\"flex-end\"\n        >\n          <div className={classes.sent}>\n            <Typography variant=\"body2\" gutterBottom>\n              {props.text}\n            </Typography>\n          </div>\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nexport default Message;\n","/** @format */\n\nimport firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst config = {\n  apiKey: \"AIzaSyCnv6ETnd1etGK8UtlwB8jYg_WWhvM7rZM\",\n  authDomain: \"message-fe49a.firebaseapp.com\",\n  projectId: \"message-fe49a\",\n  storageBucket: \"message-fe49a.appspot.com\",\n  messagingSenderId: \"499850275859\",\n  appId: \"1:499850275859:web:f3a131364a448ed737a3e6\",\n  measurementId: \"G-26LSP57GB8\",\n};\nfirebase.initializeApp(config);\nfirebase.analytics();\n\nexport default firebase;\n","/** @format */\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectMyEmail } from \"../../slices/authenticate\";\nimport { selectOtherEmail } from \"../../slices/communicate\";\nimport PropTypes from \"prop-types\";\nimport Message from \"../message/message\";\nimport { VariableSizeList } from \"react-window\";\n\nimport firebase from \"../../firebase/firebase\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: 250,\n  },\n}));\n\nconst Messages = () => {\n  const classes = useStyles();\n  const myEmail = useSelector(selectMyEmail);\n  const otherEmail = useSelector(selectOtherEmail);\n  const [messages, setMessages] = useState([]);\n  const db = firebase.firestore();\n  const listRef = useRef(null);\n\n  const renderRow = (props) => {\n    const { index, style } = props;\n    return (\n      <div style={style}>\n        <Message\n          key={index}\n          isFriend={messages[index].email === otherEmail}\n          text={messages[index].message}\n        />\n      </div>\n    );\n  };\n\n  renderRow.propTypes = {\n    index: PropTypes.number.isRequired,\n    style: PropTypes.object.isRequired,\n  };\n\n  const getItemSize = (index) => {\n    const lineLength = 63;\n    let messageLength = 1;\n    if (messages[index]) {\n      messageLength = messages[index].message.length;\n    }\n    const baseHeight = 35;\n    const additionalLine = 20;\n    let division = Math.round(messageLength / lineLength);\n    if (division < 1) {\n      return baseHeight;\n    } else {\n      // base height is 35px and 20px for each line\n      return baseHeight + (division - 1) * additionalLine;\n    }\n  };\n\n  useEffect(() => {\n    const loadMessages = () => {\n      db.collection(\"users\")\n        .doc(myEmail)\n        .collection(\"friends\")\n        .doc(otherEmail)\n        .collection(\"conversation\")\n        .onSnapshot((querySnapshot) => {\n          const temp = [];\n          querySnapshot.forEach((doc) => {\n            temp.push(doc.data());\n          });\n          setMessages(temp);\n          listRef.current.scrollToItem(messages.length - 1);\n        });\n    };\n    loadMessages();\n  }, [db, messages.length, myEmail, otherEmail]);\n\n  return (\n    <div className={classes.root}>\n      <VariableSizeList\n        height={250}\n        width=\"100%\"\n        itemSize={getItemSize}\n        itemCount={messages.length}\n        ref={listRef}\n      >\n        {renderRow}\n      </VariableSizeList>\n    </div>\n  );\n};\n\nexport default Messages;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectOpenDropdown, setOpenDropdown } from \"../../slices/actions\";\nimport {\n  selectMyEmail,\n  selectMyLanguage,\n  selectMyName,\n} from \"../../slices/authenticate\";\n\nimport {\n  selectOtherEmail,\n  selectOtherLanguage,\n  selectOtherName,\n} from \"../../slices/communicate\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport DeleteConversation from \"../dialog/delete-conversation\";\nimport Dropdown from \"../dropdown/dropdown\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Messages from \"../messages/messages\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport { red } from \"@material-ui/core/colors\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 300,\n    height: \"33%\",\n    marginTop: \"1.5rem\",\n    marginBottom: \"5rem\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  button: {\n    marginTop: \"0.75rem\",\n    textTransform: \"capitalize\",\n    width: \"100%\",\n  },\n  input: {\n    marginTop: \"2rem\",\n    width: \"100%\",\n  },\n  messages: {\n    width: \"100%\",\n    height: 350,\n  },\n  popperButton: {\n    textTransform: \"capitalize\",\n  },\n}));\n\nconst Chat = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const myEmail = useSelector(selectMyEmail);\n  const myName = useSelector(selectMyLanguage);\n  const myLanguage = useSelector(selectMyName);\n  const otherEmail = useSelector(selectOtherEmail);\n  const otherName = useSelector(selectOtherName);\n  const otherLanguage = useSelector(selectOtherLanguage);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = useSelector(selectOpenDropdown);\n  const [placement, setPlacement] = useState();\n\n  const [message, setMessage] = useState(\"\");\n\n  const sendMessage = () => {\n    const data = {\n      action: \"send_message\",\n      my_email: myEmail,\n      my_name: myName,\n      my_language: myLanguage,\n      other_email: otherEmail,\n      other_name: otherName,\n      other_language: otherLanguage,\n      message: message.trim(),\n    };\n\n    fetch(\"https://message4.herokuapp.com/firebase\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"send_message:\", data.result);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleClick = (newPlacement) => (event) => {\n    setAnchorEl(event.currentTarget);\n    dispatch(setOpenDropdown((prev) => placement !== newPlacement || !prev));\n    setPlacement(newPlacement);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (message.length > 0) {\n      sendMessage();\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card>\n        <CardHeader\n          avatar={<Avatar alt={otherName} className={classes.avatar} />}\n          action={\n            <IconButton onClick={handleClick(\"right\")} aria-label=\"settings\">\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title={otherName}\n        />\n        <Dropdown anchorEl={anchorEl} open={open} placement={placement} />\n        <DeleteConversation otherName={otherName} />\n        <CardContent>\n          <Messages />\n          <FormControl className={classes.input} variant=\"outlined\">\n            <InputLabel htmlFor=\"outlined-adornment-password\">\n              Message\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type=\"text\"\n              name=\"text\"\n              value={message}\n              onChange={handleChange}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  handleSubmit(event);\n                }\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleSubmit}\n                    edge=\"end\"\n                  >\n                    <SendIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={67}\n              autoComplete=\"off\"\n            />\n          </FormControl>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Chat;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectMyEmail } from \"../../slices/authenticate\";\nimport {\n  setAddingFriend,\n  selectIsAddingFriend,\n  setIsChatOpen,\n  setOtherEmail,\n  setOtherName,\n  setOtherLanguage,\n} from \"../../slices/communicate\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\n\nimport firebase from \"../../firebase/firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"1.5rem\",\n    width: \"100%\",\n    maxWidth: \"36ch\",\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  list: {\n    marginTop: \"1rem\",\n  },\n  fab: {\n    marginLeft: \"1rem\",\n    textTransform: \"capitalize\",\n    background: \"linear-gradient(45deg, #ff2454 30%, #fb9f6f 90%)\",\n  },\n}));\n\nconst Contacts = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const myEmail = useSelector(selectMyEmail);\n  const isAddingFriend = useSelector(selectIsAddingFriend);\n  const [friends, setFriends] = useState([]);\n  const db = firebase.firestore();\n\n  useEffect(() => {\n    const getFriends = () => {\n      db.collection(\"users\")\n        .doc(myEmail)\n        .collection(\"friends\")\n        .onSnapshot((querySnapshot) => {\n          const temp = [];\n          querySnapshot.forEach((doc) => {\n            temp.push(doc.data());\n          });\n          setFriends(temp);\n        });\n    };\n\n    getFriends();\n  }, [db, myEmail]);\n\n  const handleOpenChat = (friend) => {\n    if (isAddingFriend) {\n      dispatch(setAddingFriend());\n    }\n    dispatch(setIsChatOpen(true));\n    dispatch(setOtherEmail(friend.email));\n    dispatch(setOtherName(friend.name));\n    dispatch(setOtherLanguage(friend.language));\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        <Fab\n          onClick={() => {\n            if (!isAddingFriend) {\n              dispatch(setAddingFriend());\n            }\n          }}\n          color=\"primary\"\n          className={classes.fab}\n          variant=\"extended\"\n        >\n          <AddIcon className={classes.extendedIcon} />\n          Add Friend\n        </Fab>\n          <List className={classes.list}>\n            {friends.map((friend, idx) => {\n              return (\n                <ListItem\n                  onClick={() => handleOpenChat(friend)}\n                  key={idx}\n                  alignItems=\"flex-start\"\n                  button\n                >\n                  <ListItemAvatar>\n                    <Avatar alt={friend.name} />\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={friend.name}\n                    secondary={\n                      <React.Fragment>\n                        {friend.lastMessage\n                          ? friend.lastMessage.length > 41\n                            ? friend.lastMessage.slice(0, 38).trim() + \"...\"\n                            : friend.lastMessage\n                          : `Start your conversation with ${friend.name}`}\n                      </React.Fragment>\n                    }\n                  />\n                </ListItem>\n              );\n            })}\n          </List>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Contacts;\n","/** @format */\n\nimport React, { useEffect, useState } from \"react\";\nimport { setIsSnackbarOpen, setSnackbarMessage } from \"../../slices/feedback\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectMyEmail } from \"../../slices/authenticate\";\nimport { makeStyles} from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\n\nimport firebase from \"../../firebase/firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: \"0.5rem\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  button: {\n    marginLeft: \"0.5rem\",\n    textTransform: \"capitalize\",\n  },\n  item: {\n    marginBottom: \"0.5rem\",\n  },\n  title: {\n    fontSize: \"1rem\",\n    fontWeight: 600,\n  },\n}));\n\nconst FriendRequests = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const myEmail = useSelector(selectMyEmail);\n\n  const [friendRequests, setFriendRequests] = useState([]);\n\n  const getFriendRequests = () => {\n    const db = firebase.firestore();\n    db.collection(\"users\")\n      .doc(myEmail)\n      .collection(\"friend-requests\")\n      .onSnapshot((querySnapshot) => {\n        const temp = [];\n        querySnapshot.forEach((doc) => {\n          temp.push(doc.data());\n        });\n        setFriendRequests(temp);\n      });\n  };\n\n  const handleAddFriend = (friend) => {\n    const data = {\n      action: \"accept_friend_request\",\n      my_email: myEmail,\n      other_email: friend.email,\n    };\n\n    fetch(\"https://message4.herokuapp.com/firebase\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        getFriendRequests();\n        console.log(\"accept_friend_request:\", data.result);\n        dispatch(setIsSnackbarOpen());\n        dispatch(\n          setSnackbarMessage(`${friend.name} was added to your friends list`)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  const handleIgnoreFriend = (friend) => {\n    const data = {\n      action: \"delete_friend_request\",\n      my_email: myEmail,\n      other_email: friend.email,\n    };\n\n    fetch(\"https://message4.herokuapp.com/firebase\", {\n      method: \"POST\", // or 'PUT'\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"delete_friend_request:\", data.result);\n        getFriendRequests();\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  };\n\n  useEffect(() => {\n    getFriendRequests();\n  });\n\n  return (\n    <div>\n      {friendRequests.length > 0 ? (\n        <List className={classes.root}>\n          {\n            <ListSubheader\n              className={classes.title}\n              component=\"div\"\n              id=\"nested-list-subheader\"\n            >\n              Friend Requests\n            </ListSubheader>\n          }\n          {friendRequests.map((friend, idx) => {\n            const labelId = `checkbox-list-secondary-label-${friend.name}`;\n            return (\n              <div key={idx}>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar alt={friend.name} />\n                  </ListItemAvatar>\n                  <ListItemText id={labelId} primary={friend.name} />\n                  <ListItemSecondaryAction>\n                    <Button\n                      onClick={() => {\n                        handleAddFriend(friend);\n                      }}\n                      className={classes.button}\n                      size=\"small\"\n                      variant=\"outlined\"\n                    >\n                      add\n                    </Button>\n                    <Button\n                      onClick={() => {\n                        handleIgnoreFriend(friend);\n                      }}\n                      className={classes.button}\n                      size=\"small\"\n                    >\n                      ignore\n                    </Button>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              </div>\n            );\n          })}\n        </List>\n      ) : null}\n    </div>\n  );\n};\n\nexport default FriendRequests;\n","export default __webpack_public_path__ + \"static/media/logo.db588d1b.svg\";","/** @format */\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setUser, selectUser } from \"../../slices/authenticate\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport logo from \"../../assets/logo.svg\";\n\nimport firebase from \"../../firebase/firebase\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    background: \"#383C42\",\n  },\n  img: {\n    marginTop: \"0.75rem\",\n  },\n  signOut: {\n    textTransform: \"capitalize\",\n  },\n  title: {\n    flexGrow: 1,\n    margin: \"auto\",\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const handleSubmit = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        // Sign-out successful.\n        window.location.reload(false);\n        localStorage.clear();\n        dispatch(setUser());\n      })\n      .catch((error) => {\n        const errorMessage = error.message;\n        console.log(errorMessage);\n        // An error happened.\n      });\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} color=\"primary\" position=\"static\">\n        <Toolbar>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n          >\n            <Grid item>\n              <Typography className={classes.title}>\n                <img\n                  className={classes.img}\n                  src={logo}\n                  width=\"125rem\"\n                  alt=\"logo\"\n                />\n              </Typography>\n            </Grid>\n            <Grid item>\n              {user ? (\n                <Button\n                  onClick={handleSubmit}\n                  className={classes.signOut}\n                  color=\"inherit\"\n                  variant=\"outlined\"\n                >\n                  Sign Out\n                </Button>\n              ) : (\n                <Hidden only=\"xs\">\n                  <Typography className={classes.title}>\n                    Translate your message\n                  </Typography>\n                </Hidden>\n              )}\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","/** @format */\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setMyName,\n  setMyLanguage,\n  selectMyEmail,\n} from \"../../slices/authenticate\";\nimport {\n  selectIsChatOpen,\n  selectIsAddingFriend,\n} from \"../../slices/communicate\";\nimport {\n  setIsSnackbarOpen,\n  selectIsSnackbarOpen,\n  selectSnackbarMessage,\n  selectIsLoading,\n} from \"../../slices/feedback\";\nimport AddFriend from \"../../components/add-friend/add-friend\";\nimport Chat from \"../../components/chat/chat\";\nimport Contacts from \"../../components/contacts/contacts\";\nimport FriendRequests from \"../../components/friend-requests/friend-requests\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Header from \"../../components/header/header\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport firebase from \"../../firebase/firebase\";\n\nconst Main = () => {\n  const dispatch = useDispatch();\n  const myEmail = useSelector(selectMyEmail);\n  const db = firebase.firestore();\n  const myRef = db.collection(\"users\").doc(myEmail);\n  const isAddingFriend = useSelector(selectIsAddingFriend);\n  const isChatOpen = useSelector(selectIsChatOpen);\n  const isLoading = useSelector(selectIsLoading);\n  const isSnackbarOpen = useSelector(selectIsSnackbarOpen);\n  const snackbarMessage = useSelector(selectSnackbarMessage);\n\n  useEffect(() => {\n    myRef\n      .get()\n      .then((doc) => {\n        if (doc.exists) {\n          dispatch(setMyName(doc.data().name));\n          dispatch(setMyLanguage(doc.data().language));\n        } else {\n          // doc.data() will be undefined in this case\n          console.log(\"No such document!\");\n        }\n      })\n      .catch((error) => {\n        console.log(\"Error getting document:\", error);\n      });\n  });\n\n  return (\n    <div>\n      <Header />\n      {isLoading ? <LinearProgress /> : null}\n      <Grid container direction=\"row\" justify=\"center\" spacing={1}>\n        <Grid item xs={12} sm={3} lg={4}>\n          <Contacts />\n        </Grid>\n        <Grid item xs={11} sm={6} lg={4}>\n          {isAddingFriend ? <AddFriend /> : isChatOpen ? <Chat /> : null}\n        </Grid>\n        <Grid item xs={11} sm={3} lg={4}>\n          <FriendRequests />\n        </Grid>\n      </Grid>\n\n      <Snackbar\n        open={isSnackbarOpen}\n        autoHideDuration={3000}\n        onClose={() => {\n          dispatch(setIsSnackbarOpen());\n        }}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        message={snackbarMessage}\n      />\n    </div>\n  );\n};\n\nexport default Main;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nimport firebase from \"../../firebase/firebase\";\nimport {\n  setHasAccount,\n  setMyName,\n  setMyEmail,\n  setPassword,\n  setWelcome,\n  setMyLanguage,\n  setUser,\n  selectMyLanguage,\n  selectWelcome,\n  selectMyName,\n  selectMyEmail,\n  selectPassword,\n} from \"../../slices/authenticate\";\nimport {\n  setServerError,\n  setValidationError,\n  selectServerError,\n  selectValidationError,\n} from \"../../slices/feedback\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  alert: {\n    marginTop: \"0.75rem\",\n  },\n\n  button: {\n    marginBottom: \"0.75rem\",\n    textTransform: \"capitalize\",\n    width: \"100%\",\n  },\n  content: {\n    padding: \"1rem 1rem 0rem 1rem\",\n  },\n  alternateButton: {\n    textTransform: \"capitalize\",\n    width: \"100%\",\n  },\n  header: {\n    background: \"#F4F5F6\",\n    padding: \"1rem 0.5rem 1rem 0.5rem\",\n    textAlign: \"center\",\n  },\n\n  intro: {\n    marginBottom: \"1.5rem\",\n    textAlign: \"left\",\n  },\n  input: {\n    marginBottom: \"1rem\",\n    width: \"100%\",\n  },\n  dropdown: {\n    marginBottom: \"1.25rem\",\n    width: \"100%\",\n  },\n});\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  const myLanguage = useSelector(selectMyLanguage);\n  const myName = useSelector(selectMyName);\n  const myEmail = useSelector(selectMyEmail);\n  const password = useSelector(selectPassword);\n  const validationError = useSelector(selectValidationError);\n  const serverError = useSelector(selectServerError);\n  if (serverError) {\n    setTimeout(() => {\n      dispatch(setServerError(\"\"));\n    }, 3000);\n  }\n  const welcome = useSelector(selectWelcome);\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const languages = [\n    {\n      value: \"en\",\n      label: \"English\",\n    },\n    {\n      value: \"es\",\n      label: \"Español\",\n    },\n    {\n      value: \"it\",\n      label: \"Italiano\",\n    },\n    {\n      value: \"fr\",\n      label: \"Français\",\n    },\n    {\n      value: \"de\",\n      label: \"Deutsch\",\n    },\n  ];\n\n  const createUser = () => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(myEmail, password)\n      .then((userCredential) => {\n        dispatch(setUser());\n        const user = userCredential.user;\n        localStorage.setItem(\"userInfo\", JSON.stringify(user.email));\n      })\n      .catch((error) => {\n        dispatch(setServerError(error.message));\n      });\n  };\n\n  const validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validateEmail(myEmail)) {\n      createUser();\n      // Add user to database\n      const data = {\n        action: \"add_user_to_database\",\n        my_email: myEmail,\n        my_name: myName,\n        my_language: myLanguage,\n      };\n\n      fetch(\"https://message4.herokuapp.com/firebase\", {\n        method: \"POST\", // or 'PUT'\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"add_user_to_database:\", data.result);\n        })\n        .catch((error) => {\n          dispatch(setServerError(error));\n        });\n    } else {\n      dispatch(setValidationError(\"Please enter a valid email\"));\n    }\n  };\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"overline\" gutterBottom>\n          {welcome ? \"WELCOME\" : \"SIGN UP\"}\n        </Typography>\n      </div>\n      <div className={classes.content}>\n        <CardContent>\n          <form noValidate autoComplete=\"off\">\n            {welcome ? (\n              <div>\n                <Typography\n                  className={classes.intro}\n                  variant=\"body2\"\n                  gutterBottom\n                >\n                  Message translates your words into the language your friends\n                  speak\n                </Typography>\n\n                <TextField\n                  className={classes.dropdown}\n                  select\n                  label=\"Select your language\"\n                  value={myLanguage}\n                  onChange={(event) => {\n                    dispatch(setMyLanguage(event.target.value));\n                    dispatch(setWelcome());\n                  }}\n                  variant=\"outlined\"\n                >\n                  {languages.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </div>\n            ) : (\n              <div>\n                <TextField\n                  className={classes.dropdown}\n                  select\n                  label=\"Select your language\"\n                  value={myLanguage}\n                  onChange={(event) => {\n                    dispatch(setMyLanguage(event.target.value));\n                  }}\n                  variant=\"outlined\"\n                >\n                  {languages.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n                <TextField\n                  onChange={(event) => {\n                    dispatch(setMyName(event.target.value));\n                  }}\n                  className={classes.input}\n                  label=\"Name\"\n                  name=\"name\"\n                  variant=\"outlined\"\n                />\n                <TextField\n                  onChange={(event) => {\n                    dispatch(setMyEmail(event.target.value));\n                    if (validationError) {\n                      dispatch(setValidationError(\"\"));\n                    }\n                  }}\n                  autoComplete=\"email\"\n                  error={validationError ? true : false}\n                  helperText={validationError}\n                  className={classes.input}\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  variant=\"outlined\"\n                />\n                <FormControl className={classes.input} variant=\"outlined\">\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\n                    Password\n                  </InputLabel>\n                  <OutlinedInput\n                    onChange={(event) => {\n                      dispatch(setPassword(event.target.value));\n                    }}\n                    autoComplete=\"new-password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    name=\"password\"\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={() => {\n                            setShowPassword(!showPassword);\n                          }}\n                          edge=\"end\"\n                        >\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                    labelWidth={70}\n                  />\n                  {serverError ? (\n                    <Alert className={classes.alert} severity=\"warning\">\n                      {serverError}\n                    </Alert>\n                  ) : null}\n                </FormControl>\n                <Button\n                  onClick={handleSubmit}\n                  className={classes.button}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Sign up\n                </Button>\n              </div>\n            )}\n\n            <Button\n              onClick={() => {\n                dispatch(setHasAccount());\n              }}\n              className={classes.alternateButton}\n              color=\"primary\"\n            >\n              Already Have an account? Sign in instead\n            </Button>\n          </form>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\nexport default SignUp;\n","/** @format */\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nimport firebase from \"../../firebase/firebase\";\nimport {\n  setHasAccount,\n  setMyEmail,\n  setPassword,\n  setUser,\n  selectMyEmail,\n  selectPassword,\n} from \"../../slices/authenticate\";\nimport {\n  setValidationError,\n  setServerError,\n  selectServerError,\n  selectValidationError,\n} from \"../../slices/feedback\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  alert: {\n    marginTop: \"0.75rem\",\n  },\n  appbar: {\n    width: \"100%\",\n  },\n  button: {\n    marginBottom: \"0.75rem\",\n    textTransform: \"capitalize\",\n    width: \"100%\",\n  },\n  content: {\n    padding: \"1rem 1rem 0rem 1rem\",\n  },\n  alternateButton: {\n    textTransform: \"capitalize\",\n    width: \"100%\",\n  },\n  header: {\n    background: \"#F4F5F6\",\n    padding: \"1rem 0.5rem 1rem 0.5rem\",\n    textAlign: \"center\",\n  },\n  icon: {\n    marginTop: \"0.5rem\",\n    marginRight: \"-0.75rem\",\n  },\n  intro: {\n    marginBottom: \"1.5rem\",\n    textAlign: \"left\",\n  },\n  input: {\n    marginBottom: \"1rem\",\n    width: \"100%\",\n  },\n  dropdown: {\n    marginBottom: \"1.25rem\",\n    width: \"100%\",\n  },\n});\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  const myEmail = useSelector(selectMyEmail);\n  const password = useSelector(selectPassword);\n  const serverError = useSelector(selectServerError);\n  const validationError = useSelector(selectValidationError);\n  if (serverError) {\n    setTimeout(() => {\n      dispatch(setServerError(\"\"));\n    }, 3000);\n  }\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (validateEmail(myEmail)) {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(myEmail, password)\n        .then((userCredential) => {\n          dispatch(setUser());\n          const user = userCredential.user;\n          localStorage.setItem(\"userInfo\", JSON.stringify(user.email));\n        })\n        .catch((error) => {\n          dispatch(setServerError(error.message));\n        });\n    } else {\n      dispatch(setValidationError(\"Please enter a valid email\"));\n    }\n  };\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"overline\" gutterBottom>\n          SIGN IN\n        </Typography>\n      </div>\n      <div className={classes.content}>\n        <CardContent>\n          <form noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                onChange={(event) => {\n                  dispatch(setMyEmail(event.target.value));\n                  if (validationError) {\n                    dispatch(setValidationError(\"\"));\n                  }\n                }}\n                autoComplete=\"email\"\n                error={validationError ? true : false}\n                helperText={validationError}\n                className={classes.input}\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                variant=\"outlined\"\n              />\n              <FormControl className={classes.input} variant=\"outlined\">\n                <InputLabel htmlFor=\"outlined-adornment-password\">\n                  Password\n                </InputLabel>\n                <OutlinedInput\n                  onChange={(event) => {\n                    dispatch(setPassword(event.target.value));\n                  }}\n                  autoComplete=\"current-password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={() => {\n                          setShowPassword(!showPassword);\n                        }}\n                        edge=\"end\"\n                      >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  labelWidth={70}\n                />\n                {serverError ? (\n                  <Alert className={classes.alert} severity=\"warning\">\n                    {serverError}\n                  </Alert>\n                ) : null}\n              </FormControl>\n\n              <Button\n                onClick={handleSubmit}\n                className={classes.button}\n                variant=\"contained\"\n                color=\"primary\"\n              >\n                Sign In\n              </Button>\n            </div>\n            <Button\n              onClick={() => {\n                dispatch(setHasAccount());\n              }}\n              className={classes.alternateButton}\n              color=\"primary\"\n            >\n              Don't Have an account? Sign Up instead\n            </Button>\n          </form>\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\nexport default SignUp;\n","/** @format */\n\n// UncontrolledLottie.jsx\nimport React from \"react\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../../assets/background.json\";\n\nconst Background = () => {\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  return <Lottie options={defaultOptions} height={300} width={400} />;\n};\n\nexport default Background;\n","/** @format */\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectHasAccount } from \"../../slices/authenticate\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Header from \"../../components/header/header\";\nimport SignUp from \"../../components/sign-up/sign-up.jsx\";\nimport SignIn from \"../../components/sign-in/sign-in.jsx\";\nimport Background from \"../../components/background/background\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: { marginTop: \"5rem\", marginBottom: \"5rem\" },\n}));\n\nconst Authenticate = () => {\n  const classes = useStyles();\n  const hasAccount = useSelector(selectHasAccount);\n  return (\n    <div>\n      <Header />\n      <Grid\n        className={classes.root}\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"flex-start\"\n        spacing={8}\n      >\n        <Grid item xs={10} sm={8} md={4}>\n          <Background />\n        </Grid>\n        <Grid item xs={10} sm={8} md={3}>\n          {hasAccount ? <SignIn /> : <SignUp />}\n        </Grid>\n        <Grid item xs={10} md={1} />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Authenticate;\n","/** @format */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectUser, setMyEmail, setUser } from \"./slices/authenticate\";\r\nimport {\r\n  createMuiTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nimport Main from \"../src/pages/main/main\";\r\nimport Authenticate from \"./pages/authenticate/authenticate\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    overflowX: \"hidden\",\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        light: \"#1F84FF\",\r\n        main: \"#006EF5\",\r\n        dark: \"#005CCC\",\r\n        contrastText: \"#fff\",\r\n      },\r\n      secondary: {\r\n        light: \"#FF476F\",\r\n        main: \"#FF2454\",\r\n        dark: \"#F50035\",\r\n        contrastText: \"#fff\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const [loaded, setLoaded] = useState(false);\r\n  const cache = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n\r\n  if (!loaded && cache) {\r\n    console.log(cache);\r\n    dispatch(setUser());\r\n    dispatch(setMyEmail(cache));\r\n    setLoaded(true);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ThemeProvider theme={theme}>\r\n        {user ? <Main /> : <Authenticate />}\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","/** @format */\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport actionsReducer from \"../slices/actions\";\r\n\r\nimport authenticateReducer from \"../slices/authenticate\";\r\nimport communicateReducer from \"../slices/communicate\";\r\nimport feedbackReducer from \"../slices/feedback\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    actions: actionsReducer,\r\n    authenticate: authenticateReducer,\r\n    communicate: communicateReducer,\r\n    feedback: feedbackReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}